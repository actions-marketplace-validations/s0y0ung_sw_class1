# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run Scraper - Update data # 워크플로우 이름 지정
on: [push]
  # schedule:
  #   - cron:  '*/5 * * * *' # 주기적으로 실행하기 위한 스케줄링 - cron 설정
permissions:
  issues: write
jobs:
  build:

    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        # python-version: ${{ matrix.python-version }}
        python-version: '3.x'
        architecture: 'x64'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r final-project/requirements.txt
    - name: Run Scraper with python
      run: |
        echo "before run scraping.py"
        python3 final-project/scraping.py
        echo "after run scraping.py"
        cd final-project
        ls -al
    - name: Auto Readme Generator
      run: |
        python3 "final-project/update-readme.py"
    - name: Commit
      run: |
        git config --local user.name "soyoung"
        git config --local user.email "psy99326@gamil.com" # 커밋에 포함될 이름
        # git add news_latest_one.json
        # git add news.json
        git add final-project/
        git add docs/index.md # 생성한 README 파일을 스테이징
        git commit -m "Auto - Update data with Scraping" # 커밋 메세지
    - name: Push
      uses: ad-m/github-push-action@master
      with:
        branch: 'master'
        github_token: $ 
        force_with_lease: true
    - name: Create issue
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}